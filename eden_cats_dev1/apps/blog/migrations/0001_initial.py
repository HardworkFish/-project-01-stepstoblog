# Generated by Django 2.0.5 on 2018-09-11 14:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import imagekit.models.fields
import mdeditor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(blank=True, max_length=30, null=True, verbose_name='昵称')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ号码')),
                ('url', models.URLField(blank=True, max_length=100, null=True, verbose_name='个人网页地址')),
                ('avatar', imagekit.models.fields.ProcessedImageField(default='avatar/default.png', upload_to='avatar', verbose_name='头像')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'ordering': ['-id'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='About',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='信息板块标题')),
                ('content', mdeditor.fields.MDTextField(blank=True, verbose_name='详细内容')),
                ('priority', models.PositiveIntegerField(default=10000, verbose_name='优先级')),
                ('image', models.ImageField(blank=True, null=True, upload_to='photos')),
            ],
            options={
                'verbose_name': 'About',
                'verbose_name_plural': 'About模块列表',
                'db_table': 'about',
                'ordering': ['priority'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', '草稿'), ('publish', '发表')], default='publish', max_length=10, verbose_name='文章状态')),
                ('created_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('public_time', models.DateTimeField(blank=True, null=True, verbose_name='发布时间')),
                ('modified_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修改时间')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('slogan', models.TextField(blank=True, null=True, verbose_name='标语')),
                ('digest', mdeditor.fields.MDTextField(blank=True, max_length=500, verbose_name='文章摘要')),
                ('content', mdeditor.fields.MDTextField(blank=True, null=True, verbose_name='正文')),
                ('words', models.PositiveIntegerField(default=0, verbose_name='文章字数')),
                ('time', models.PositiveIntegerField(default=0, verbose_name='阅读时长')),
                ('views', models.PositiveIntegerField(default=0, verbose_name='访问量')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='作者')),
            ],
            options={
                'verbose_name': '文章',
                'verbose_name_plural': '文章列表',
                'db_table': 'article',
                'ordering': ['-public_time'],
                'get_latest_by': 'created_time',
            },
        ),
        migrations.CreateModel(
            name='BaseInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('website_title', models.CharField(blank=True, max_length=300, null=True, verbose_name='网站名称')),
                ('small_website_title', models.CharField(blank=True, max_length=300, null=True, verbose_name='网站小标题')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatar')),
                ('user_name', models.CharField(max_length=100, verbose_name='用户昵称')),
                ('slogan', models.TextField(blank=True, null=True, verbose_name='用户标语')),
                ('created_time', models.DateField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modified_time', models.DateField(default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息设置',
                'db_table': 'base_info',
                'ordering': ['created_time'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='类别')),
                ('created_time', models.DateField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modified_time', models.DateField(default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '类别名称',
                'verbose_name_plural': '分类列表',
                'db_table': 'category',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Column',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='博客专栏')),
                ('created_time', models.DateField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modified_time', models.DateField(default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '专栏名称',
                'verbose_name_plural': '专栏列表',
                'db_table': 'column',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ColumnCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='专栏类别')),
                ('created_time', models.DateField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modified_time', models.DateField(default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '专栏类别',
                'verbose_name_plural': '专栏分类列表',
                'db_table': 'column_category',
            },
        ),
        migrations.CreateModel(
            name='FriendsLinks',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='网站名称')),
                ('url', models.CharField(max_length=300, verbose_name='链接地址')),
                ('remark', models.TextField(blank=True, null=True, verbose_name='备注信息')),
                ('created_time', models.DateField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('status', models.CharField(choices=[('hide', '隐藏'), ('show', '显示')], default='hide', max_length=10, verbose_name='显示状态')),
            ],
            options={
                'verbose_name': '友情链接',
                'verbose_name_plural': '友情链接列表',
                'db_table': 'friend_links',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='标签名')),
                ('created_time', models.DateField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('modified_time', models.DateField(default=django.utils.timezone.now, verbose_name='修改时间')),
            ],
            options={
                'verbose_name': '标签名称',
                'verbose_name_plural': '标签列表',
                'db_table': 'tag',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='UserIp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip', models.CharField(max_length=50, verbose_name='IP地址')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='访问次数')),
                ('visit_time', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='最近访问时间')),
            ],
            options={
                'verbose_name': '访问用户信息',
                'verbose_name_plural': '访问用户列表',
            },
        ),
        migrations.CreateModel(
            name='VisitCount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='网站访问总次数')),
            ],
            options={
                'verbose_name': '网站访问总次数',
                'verbose_name_plural': '网站访问总次数',
            },
        ),
        migrations.AddField(
            model_name='column',
            name='category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.ColumnCategory', verbose_name='专栏列表'),
        ),
        migrations.AddField(
            model_name='article',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='分类'),
        ),
        migrations.AddField(
            model_name='article',
            name='column',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.Column', verbose_name='专栏'),
        ),
        migrations.AddField(
            model_name='article',
            name='tags',
            field=models.ManyToManyField(blank=True, to='blog.Tag', verbose_name='标签'),
        ),
    ]
